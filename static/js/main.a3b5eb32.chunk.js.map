{"version":3,"sources":["assets/logo.png","logo.svg","assets/avatar.png","container/Typewritter.js","container/Nav.js","container/Header.js","container/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","typewritter","state","onAnimation","typeTitle","arguments","length","undefined","TypeIt","speed","waitUntilVisible","type","pause","delete","exec","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","Promise","resolve","reject","setTimeout","_this","setState","stop","this","go","typeDescription","componentDidMount","react_default","createElement","id","className","concat","href","Component","Nav","src","Logo","alt","Header","Nav_Nav","Typewritter_typewritter","Main","Col","Header_Header","App","Row","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+FCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iOCEnBC,6MACnBC,MAAQ,CACNC,aAAa,KAEfC,UAAY,WAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpC,IAAIG,IAAO,qBAAsB,CAC/BC,MAAO,GACPC,kBAAkB,IAEnBC,KAAK,gBACLC,MAAM,KACNC,OAAO,IACPF,KAAK,kBACLC,MAAM,KACNC,OAAO,IACPF,KAAK,kCACLC,MAAM,KACNC,OAAO,IACPF,KAAK,6JACLG,KAdDC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAcM,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACE,IAAIC,QAAQ,SAACC,EAASC,GAC1BC,WAAW,WACTC,EAAKC,SAAS,CAAE3B,aAAa,KAC7B,OAJA,wBAAAmB,EAAAS,SAAAX,EAAAY,UAOLC,QAGHC,gBAAkB,WAEhB,IAAI1B,IAAO,oBAAqB,CAC9BC,MAAO,GACPC,kBAAkB,IACjBC,KAJiB,sKAICsB,QAEvBE,kBAAoB,WAClBN,EAAKzB,UAAUyB,EAAKK,0FAIpB,OACEE,EAAAlB,EAAAmB,cAAA,OAAKC,GAAG,eACNF,EAAAlB,EAAAmB,cAAA,MAAIE,UAAU,sBACdH,EAAAlB,EAAAmB,cAAA,OAAKE,UAAS,WAAAC,QAAcR,KAAK9B,MAAMC,aAAe,SACpDiC,EAAAlB,EAAAmB,cAAA,KAAGI,KAAK,KAAR,wBA7C+BC,sCCCpBC,mLAEjB,OACEP,EAAAlB,EAAAmB,cAAA,OAAKE,UAAU,OACbH,EAAAlB,EAAAmB,cAAA,OAAKC,GAAG,QACNF,EAAAlB,EAAAmB,cAAA,OAAMO,IAAKC,IAAMC,IAAI,UAEvBV,EAAAlB,EAAAmB,cAAA,OAAKC,GAAG,QACNF,EAAAlB,EAAAmB,cAAA,KAAGI,KAAK,KAAR,WAAoBL,EAAAlB,EAAAmB,cAAA,KAAGE,UAAU,0BACjCH,EAAAlB,EAAAmB,cAAA,KAAGI,KAAK,KAAR,SAAkBL,EAAAlB,EAAAmB,cAAA,KAAGE,UAAU,yBAC/BH,EAAAlB,EAAAmB,cAAA,KAAGI,KAAK,KAAR,UAAmBL,EAAAlB,EAAAmB,cAAA,KAAGE,UAAU,kCAVTG,aCCZK,mLAEjB,OACEX,EAAAlB,EAAAmB,cAAA,OAAKC,GAAG,iBACNF,EAAAlB,EAAAmB,cAACW,EAAD,MACAZ,EAAAlB,EAAAmB,cAAA,OAAKC,GAAG,UAINF,EAAAlB,EAAAmB,cAACY,EAAD,eAT0BP,qBCAfQ,mLAEjB,OACEd,EAAAlB,EAAAmB,cAACc,EAAA,EAAD,KACEf,EAAAlB,EAAAmB,cAACe,EAAD,cAJ0BV,aCcnBW,mLAVX,OACEjB,EAAAlB,EAAAmB,cAAA,OAAKE,UAAU,OACbH,EAAAlB,EAAAmB,cAACiB,EAAA,EAAD,KACElB,EAAAlB,EAAAmB,cAACkB,EAAD,eALQb,aCMEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAlB,EAAAmB,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3b5eb32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b7d64a3b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.081038d7.png\";","import React, { Component } from 'react'\r\nimport TypeIt from 'typeit';\r\nexport default class typewritter extends Component {\r\n  state = {\r\n    onAnimation: true\r\n  }\r\n  typeTitle = (callback = () => {})  => {\r\n    new TypeIt('.type_intro.active', {\r\n      speed: 50,\r\n      waitUntilVisible: true\r\n    })\r\n    .type(\"Uhmm, Hello?\")\r\n    .pause(500)\r\n    .delete(50)\r\n    .type(\"Are you there?\")\r\n    .pause(500)\r\n    .delete(50)\r\n    .type(\"Good. I'll introduce myself :)\")\r\n    .pause(600)\r\n    .delete(90)\r\n    .type(\"Hi, I'm <span id='highlight'>Aldrin Lim</span>. A Software Developer based in Philippines. Let me build you a beautiful website or a cool web application\")\r\n    .exec(async () => {\r\n      await new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          this.setState({ onAnimation: false })\r\n        },500)\r\n      })\r\n    })\r\n    .go()\r\n  }\r\n\r\n  typeDescription = () => {\r\n    const description = \"Im a Software Developer from Philippines. Also a <span id='highlight'>Fullstack Developer</span>. I can build you a beautiful website or a cool web application :)\"\r\n    new TypeIt('#type_description', {\r\n      speed: 40,\r\n      waitUntilVisible: true\r\n    }).type(description).go();\r\n  }\r\n  componentDidMount = () => {\r\n    this.typeTitle(this.typeDescription);\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <div id=\"typewritter\">\r\n        <h1 className=\"type_intro active\"></h1>\r\n        <div className={`seemycv ${!this.state.onAnimation && \"show\"}`}>\r\n          <a href=\"#\">View Resume</a>\r\n        </div>  \r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Row} from 'reactstrap';\r\nimport Logo from '../assets/logo.png';\r\nexport default class Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <div id=\"logo\">\r\n          <img  src={Logo} alt=\"logo\" />\r\n        </div>\r\n        <div id=\"menu\">\r\n          <a href=\"#\">Projects<i className=\"ml-1 fa fa-briefcase\"/></a>\r\n          <a href=\"#\">Skills<i className=\"ml-1 fa fa-keyboard\"/></a>\r\n          <a href=\"#\">Contact<i className=\"ml-1 fa fa-envelope\"/></a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Typewritter from './Typewritter';\r\nimport avatar from '../assets/avatar.png';\r\nimport Nav from './Nav';\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"first_section\">\r\n        <Nav />\r\n        <div id=\"header\">\r\n          {/* <div id=\"avatar\">\r\n            <img src={avatar} alt=\"me\" />\r\n          </div> */}\r\n          <Typewritter />\r\n          \r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Nav from './Nav';\r\nimport { Col } from 'reactstrap';\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <Col>\r\n        <Header />\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './assets/normalize.css';\nimport './assets/main.scss';\nimport { Row } from 'reactstrap';\nimport Main from './container/Main';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Row>\n          <Main/>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}